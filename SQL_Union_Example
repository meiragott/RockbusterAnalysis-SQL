# SQL Query: Top and Bottom 10 Movies by Revenue
(SELECT 
    f.title AS movie_title,
    ROUND(AVG(EXTRACT(DAY FROM (r.return_date - r.rental_date))), 1) AS avg_rental_duration,
    f.rental_rate,
    SUM(p.amount) AS revenue,
    c.name AS genre
FROM
    film f
INNER JOIN
    film_category fc ON f.film_id = fc.film_id
INNER JOIN
    category c ON fc.category_id = c.category_id
INNER JOIN
    inventory i ON f.film_id = i.film_id
INNER JOIN
    rental r ON i.inventory_id = r.inventory_id
INNER JOIN
    payment p ON r.rental_id = p.rental_id
GROUP BY
    f.film_id, f.title, f.rental_rate, c.name
ORDER BY
    revenue DESC
LIMIT
    10)

UNION ALL

(SELECT 
    f.title AS movie_title,
    ROUND(AVG(EXTRACT(DAY FROM (r.return_date - r.rental_date))), 1) AS avg_rental_duration,
    f.rental_rate,
    SUM(p.amount) AS revenue,
    c.name AS genre
FROM
    film f
INNER JOIN
    film_category fc ON f.film_id = fc.film_id
INNER JOIN
    category c ON fc.category_id = c.category_id
INNER JOIN
    inventory i ON f.film_id = i.film_id
INNER JOIN
    rental r ON i.inventory_id = r.inventory_id
INNER JOIN
    payment p ON r.rental_id = p.rental_id
GROUP BY
    f.film_id, f.title, f.rental_rate, c.name
ORDER BY
    revenue ASC
LIMIT
    10);
